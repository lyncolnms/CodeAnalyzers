name: Code Analysis

on:
  pull_request:
    types:
      - opened

jobs:
  analyze-code:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v1

      - name: Restore NuGet packages
        run: dotnet restore

      - name: Run StyleCop.Analyzers
        run: dotnet build StyleCop/StyleCop --no-restore --no-dependencies --verbosity normal
        
      - name: Install formatter
        run: dotnet tool update --global dotnet-format
      
      - name: Diagnose Formatting
        run: dotnet format analyzers --verify-no-changes --verbosity diagnostic
      
      - name: Test
        run: dotnet test --no-build --verbosity normal

      - name: Get error lines
        id: error-lines
        run: |
          error_lines=$(dotnet build --no-restore --no-dependencies --verbosity normal | awk '/warning|error/ {print $$0}')
          echo "::set-output name=lines::$error_lines"

      - name: Comment on PR
        uses: actions/github-script@v5
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const lines = "${{ steps.error-lines.outputs.lines }}".split("\n");
            lines.forEach((line) => {
              if (line.startsWith("StyleCop/StyleCop")) {
                const [_, file, lineNo, _, message] = line.match(/^(.*):(\d+):\s*(warning|error):\s*(.*)$/);
                github.rest.pulls.createReviewComment({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  pull_number: context.issue.number,
                  body: `**${message}**`,
                  commit_id: context.payload.pull_request.head.sha,
                  path: file.replace("StyleCop/StyleCop", ""),
                  position: Number(lineNo)
                });
              }
            });

        #name: Code Review

        #on:
        #pull_request:
        ##types: [opened, synchronize]

        #jobs:
        #code-review:
        #runs-on: macos-latest

        #steps:
        #- name: Checkout
        #uses: actions/checkout@v3

        #- name: Setup .NET Core SDK 7
        #uses: actions/setup-dotnet@v3

        #- name: Install dependencies
        #run: nuget restore

        #- name: Build
        #run: msbuild StyleCop/StyleCop/StyleCop.csproj /p:Configuration=Debug

        #- name: Build
        #run: msbuild StyleCop/StyleCop/StyleCop.csproj /p:Configuration=Debug /p:Platform=iPhoneSimulator /t:Rebuild

        #- name: Build Android
        #run: MSBuild /p:Configuration=Debug ./StyleCop/StyleCop.Droid/StyleCop.Droid.csproj
        #run: msbuild StyleCop/StyleCop.csproj /t:PackageForAndroid /p:Configuration=Debug

        #- name: Build iOS
        #run: MSBuild /t:Build /p:Configuration=Debug /p:Platform=iPhone /p:BuildIpa=true ./StyleCop/StyleCop.iOS/StyleCop.iOS.csproj

        #- name: Run StyleCop.Analyzers
        #run: dotnet build --configuration Release --no-restore --nologo
