name: Code Analysis

on:
  pull_request:
    types:
      - opened

jobs:
  analyze-code:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v1

      - name: Restore NuGet packages
        run: dotnet restore

      - name: Generate StyleCop report
        run: dotnet build StyleCop/StyleCop --no-restore --no-dependencies --verbosity normal /p:ReportStyleCopViolations=true /p:StyleCopReportPath=${{ github.workspace }}/stylecop-report.xml

      - name: Install Reviewdog
        run: |
          wget -O - -q https://raw.githubusercontent.com/reviewdog/reviewdog/master/install.sh | sh -s -- -b /usr/local/bin

      - name: Run Reviewdog
        run: |
          reviewdog -f=stylecop -name="stylecop" -reporter=github-pr-review -fail-on-error=true < stylecop-report.txt
        

        # Exemplo: dotnet build / eslint / pyflakes > analysis.txt

        #      - name: Get error lines
#        id: error-lines
#        run: |
#          error_lines=$(dotnet format analyzers --verify-no-changes --verbosity diagnostic 2>&1)
#          echo "::set-output name=lines::$error_lines"
#
#      - name: Add PR comments
#        uses: actions/github-script@v5
#        with:
#          github-token: ${{ secrets.GITHUB_TOKEN }}
#          script: |
#            const { createOrUpdateComment } = require('pull-request-comment');
#            const lines = ${{ steps.error-lines.outputs.lines }};
#
#            for (const line of lines.split('\n')) {
#              const match = line.match(/^(.*):(\d+):\s*(warning|error):\s*(.*)$/);
#              if (match) {
#                const [, file, lineNo, , message] = match;
#                const comment = `**${message}**\n\nFile: ${file}\nLine: ${lineNo}`;
#
#                await createOrUpdateComment(comment, file, Number(lineNo));
#              }
#            }


        #name: Code Review

        #on:
        #pull_request:
        ##types: [opened, synchronize]

        #jobs:
        #code-review:
        #runs-on: macos-latest

        #steps:
        #- name: Checkout
        #uses: actions/checkout@v3

        #- name: Setup .NET Core SDK 7
        #uses: actions/setup-dotnet@v3

        #- name: Install dependencies
        #run: nuget restore

        #- name: Build
        #run: msbuild StyleCop/StyleCop/StyleCop.csproj /p:Configuration=Debug

        #- name: Build
        #run: msbuild StyleCop/StyleCop/StyleCop.csproj /p:Configuration=Debug /p:Platform=iPhoneSimulator /t:Rebuild

        #- name: Build Android
        #run: MSBuild /p:Configuration=Debug ./StyleCop/StyleCop.Droid/StyleCop.Droid.csproj
        #run: msbuild StyleCop/StyleCop.csproj /t:PackageForAndroid /p:Configuration=Debug

        #- name: Build iOS
        #run: MSBuild /t:Build /p:Configuration=Debug /p:Platform=iPhone /p:BuildIpa=true ./StyleCop/StyleCop.iOS/StyleCop.iOS.csproj

        #- name: Run StyleCop.Analyzers
        #run: dotnet build --configuration Release --no-restore --nologo