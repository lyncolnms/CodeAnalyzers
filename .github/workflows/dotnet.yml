name: Static Code Analysis

on:
  pull_request:
    types: [opened, synchronize]

jobs:
    build:
      name: Setup Xamarin and Mono versions
      runs-on: macos-latest
      steps:
        - name: setup-xamarin
          uses: maxim-lobanov/setup-xamarin@v1.1
          with:
            mono-version: 6.6
            xamarin-ios-version: 13
            xamarin-mac-version: latest
            xamarin-android-version: 10.1.3.7
            xcode-version: 11.5

#      - name: Checkout repository
#        uses: actions/checkout@v2

#      - name: Setup .NET
#        uses: actions/setup-dotnet@v1
#        with:
#          dotnet-version: '6.0.x'

#      - name: Restore dependencies
#        run: dotnet restore

#      - name: Build and analyze
#        run: |
#          dotnet build StyleCop.sln --no-restore --configuration Release

        - name: Install Reviewdog
          run: |
            wget -O - -q https://raw.githubusercontent.com/reviewdog/reviewdog/master/install.sh | sh -s -- -b /usr/local/bin

        - name: Execute custom code analysis
          run: |
            dotnet build StyleCop/StyleCop/StyleCop.csproj --no-restore --configuration Release
            dotnet run --no-build --project CustomRules/Rules.cs -- --output results.xml

        - name: Run Reviewdog for custom analysis
          env:
            REVIEWDOG_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          run: |
            reviewdog -reporter=github-pr-check -level=error < results.xml

        #dotnet tool install --global dotnet-format # Instalação da ferramenta de formatação (opcional)
        #dotnet format --check YourSolution.sln --verbosity diagnostic # Verifica a formatação do código (opcional)
        # Exemplo: dotnet build / eslint / pyflakes > analysis.txt

        #      - name: Get error lines
#        id: error-lines
#        run: |
#          error_lines=$(dotnet format analyzers --verify-no-changes --verbosity diagnostic 2>&1)
#          echo "::set-output name=lines::$error_lines"
#
#      - name: Add PR comments
#        uses: actions/github-script@v5
#        with:
#          github-token: ${{ secrets.GITHUB_TOKEN }}
#          script: |
#            const { createOrUpdateComment } = require('pull-request-comment');
#            const lines = ${{ steps.error-lines.outputs.lines }};
#
#            for (const line of lines.split('\n')) {
#              const match = line.match(/^(.*):(\d+):\s*(warning|error):\s*(.*)$/);
#              if (match) {
#                const [, file, lineNo, , message] = match;
#                const comment = `**${message}**\n\nFile: ${file}\nLine: ${lineNo}`;
#
#                await createOrUpdateComment(comment, file, Number(lineNo));
#              }
#            }


        #name: Code Review

        #on:
        #pull_request:
        ##types: [opened, synchronize]

        #jobs:
        #code-review:
        #runs-on: macos-latest

        #steps:
        #- name: Checkout
        #uses: actions/checkout@v3

        #- name: Setup .NET Core SDK 7
        #uses: actions/setup-dotnet@v3

        #- name: Install dependencies
        #run: nuget restore

        #- name: Build
        #run: msbuild StyleCop/StyleCop/StyleCop.csproj /p:Configuration=Debug

        #- name: Build iOS
        #run: msbuild StyleCop/StyleCop/StyleCop.csproj /p:Configuration=Debug /p:Platform=iPhoneSimulator /t:Rebuild

        #- name: Run StyleCop.Analyzers
        #run: dotnet build --configuration Release --no-restore --nologo