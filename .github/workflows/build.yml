name: Format check on pull request
on: pull_request
jobs:
  dotnet-format:
    runs-on: windows-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: Install dotnet-format
        run: dotnet tool install -g dotnet-format

      - name: Checkout repo
        uses: actions/checkout@v2
        with:
          ref: ${{ github.head_ref }}

      - name: Run dotnet format
        id: format
        uses: jfversluis/dotnet-format@v1.0.5
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          action: "fix"
          only-changed-files: false
          workspace: StyleCop.sln

      - name: Set output
        run: echo "{name}={value}" >> $GITHUB_OUTPUT

      - name: Add comments to pull request
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          body="${{ steps.format.outputs.stdout }}"
          gh pr review ${{ github.event.pull_request.number }} --body "$body"
          

#          $report = '${{ steps.format.outputs.has-changes }}'
#          $pythonScript = @"
#          import json
#          import os
#          import requests
#
#          pull_request_number = os.getenv("GITHUB_REF").Split("/")[-1]
#          data = json.loads(r'''$report''')
#          for issue in data:
#            body = issue["message"]
#            path = issue["path"]
#            position = issue["position"]
#            url = f"https://api.github.com/repos/${env:GITHUB_REPOSITORY}/pulls/{pull_request_number}/comments"
#            payload = {{
#              "body": body,
#              "path": path,
#              "position": position
#            }}
#          headers = {{
#            "Authorization": f"Bearer $env:GITHUB_TOKEN",
#            "Accept": "application/vnd.github.v3+json"
#          }}
#          response = requests.post(url, json=payload, headers=headers)
#          response.raise_for_status()
#          "@
#          python -c $pythonScript

#          body="$(cat format-report.json)"
#          gh pr review ${{ github.event.pull_request.number }} --body "$body"

#      - name: Commit files
#        if: steps.format.outputs.has-changes == 'true'
#        run: |
#          git config --local user.name "github-actions[bot]"
#          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
#          git commit -a -m 'Automated dotnet-format update
#          Co-authored-by: ${{ github.event.pull_request.user.login }} <${{ github.event.pull_request.user.id }}+${{ github.event.pull_request.user.login }}@users.noreply.github.com>'
#
#      - name: Create Pull Request
#        uses: peter-evans/create-pull-request@v3
#        with:
#          token: ${{ secrets.GITHUB_TOKEN }}
#          title: '[housekeeping] Automated PR to fix formatting errors'
#          body: |
#            Automated PR to fix formatting errors
#          committer: GitHub <noreply@github.com>
#          author: github-actions[bot] <41898282+github-actions[bot]@users.noreply.github.com>
#          labels: housekeeping
#          assignees: lyncolnms
#          reviewers: lyncolnms
#          branch: housekeeping/code-format

#      - name: Run Dotnet Format Analyzer
#        run: dotnet format analyzers --verbosity diag --verify-no-changes --report .

#      - name: Run dotnet format
#        id: format
#        uses: jfversluis/dotnet-format@v1.0.5
#        with:
#          repo-token: ${{ secrets.GITHUB_TOKEN }}
#          only-changed-files: false
#          fail-fast: false